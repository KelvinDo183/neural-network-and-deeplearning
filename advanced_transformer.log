2024-11-15 04:00:04,185 - INFO - Starting training...
2024-11-15 04:00:04,194 - INFO - Epoch 1/50 started.
Traceback (most recent call last):
  File "/home/ngocyen/neural-network-and-deeplearning/advanced_captioning_transformer.py", line 229, in <module>
    train(args)
  File "/home/ngocyen/neural-network-and-deeplearning/advanced_captioning_transformer.py", line 179, in train
    outputs = model(images, captions[:, :-1])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngocyen/anaconda3/envs/Inference/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngocyen/anaconda3/envs/Inference/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngocyen/neural-network-and-deeplearning/advanced_captioning_transformer.py", line 123, in forward
    outputs = self.decoder(captions, encoder_features)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngocyen/anaconda3/envs/Inference/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngocyen/anaconda3/envs/Inference/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngocyen/neural-network-and-deeplearning/advanced_captioning_transformer.py", line 87, in forward
    self.positional_encoding = torch.cat([self.positional_encoding, extra_positions], dim=1)
    ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ngocyen/anaconda3/envs/Inference/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1749, in __setattr__
    raise TypeError(f"cannot assign '{torch.typename(value)}' as parameter '{name}' "
TypeError: cannot assign 'torch.cuda.FloatTensor' as parameter 'positional_encoding' (torch.nn.Parameter or None expected)
